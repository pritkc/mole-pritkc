<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="interpol_8cpp" kind="file" language="C++">
    <compoundname>interpol.cpp</compoundname>
    <includes refid="interpol_8h" local="yes">interpol.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/cpp/interpol.cpp</label>
        <link refid="interpol_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>interpol.h</label>
        <link refid="interpol_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>armadillo</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>SPDX-License-Identifier:<sp/>GPL-3.0-or-later</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Â©<sp/>2008-2024<sp/>San<sp/>Diego<sp/>State<sp/>University<sp/>Research<sp/>Foundation<sp/>(SDSURF).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>See<sp/>LICENSE<sp/>file<sp/>or<sp/>https://www.gnu.org/licenses/gpl-3.0.html<sp/>for<sp/>details.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>@file<sp/>interpol.cpp</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Mimetic<sp/>Interpolators</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>@date<sp/>2024/10/15</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interpol_8h" kindref="compound">interpol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1-D<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classInterpol_1a1a3cbc8871f096a37b1e859bdee5d788" refkind="member"><highlight class="normal"><ref refid="classInterpol_1a1a3cbc8871f096a37b1e859bdee5d788" kindref="member">Interpol::Interpol</ref>(u32<sp/>m,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c)<sp/>:<sp/>sp_mat(m<sp/>+<sp/>1,<sp/>m<sp/>+<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>assert(m<sp/>&gt;=<sp/>4);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>assert(c<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>at(0,<sp/>0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>at(m,<sp/>m<sp/>+<sp/>1)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(u32<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>m;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>at(i,<sp/>i)<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>at(i,<sp/>i<sp/>+<sp/>1)<sp/>=<sp/>1<sp/>-<sp/>c;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2-D<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classInterpol_1a54ae1f315bdaa0eba8176a1ac3756238" refkind="member"><highlight class="normal"><ref refid="classInterpol_1a1a3cbc8871f096a37b1e859bdee5d788" kindref="member">Interpol::Interpol</ref>(u32<sp/>m,<sp/>u32<sp/>n,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c1,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Ix(m,<sp/>c1);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Iy(n,<sp/>c2);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Im<sp/>=<sp/>speye(m<sp/>+<sp/>2,<sp/>m<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>sp_mat<sp/>In<sp/>=<sp/>speye(n<sp/>+<sp/>2,<sp/>n<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>Im.shed_row(0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>Im.shed_row(m);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>In.shed_row(0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>In.shed_row(n);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>sp_mat<sp/>I1<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(In,<sp/>Ix);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>sp_mat<sp/>I2<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(Iy,<sp/>Im);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dimensions<sp/>=<sp/>2*m*n+m+n,<sp/>(m+2)*(n+2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classUtils_1a02c4cbc4ed5860b69635b480c326cea4" kindref="member">Utils::spjoin_cols</ref>(I1,<sp/>I2);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_mat<sp/>A1(2,<sp/>1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_mat<sp/>A2(2,<sp/>1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>A1(0,<sp/>0)<sp/>=<sp/>A2(1,<sp/>0)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(A1,<sp/>I1)<sp/>+<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(A2,<sp/>I2);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3-D<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classInterpol_1a55d895e0f5f190b24bc4a9d9695bcd69" refkind="member"><highlight class="normal"><ref refid="classInterpol_1a1a3cbc8871f096a37b1e859bdee5d788" kindref="member">Interpol::Interpol</ref>(u32<sp/>m,<sp/>u32<sp/>n,<sp/>u32<sp/>o,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c1,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c2,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c3)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Ix(m,<sp/>c1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Iy(n,<sp/>c2);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Iz(o,<sp/>c3);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Im<sp/>=<sp/>speye(m<sp/>+<sp/>2,<sp/>m<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>sp_mat<sp/>In<sp/>=<sp/>speye(n<sp/>+<sp/>2,<sp/>n<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Io<sp/>=<sp/>speye(o<sp/>+<sp/>2,<sp/>o<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>Im.shed_row(0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>Im.shed_row(m);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>In.shed_row(0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>In.shed_row(n);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>Io.shed_row(0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>Io.shed_row(o);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>sp_mat<sp/>I1<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(<ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(Io,<sp/>In),<sp/>Ix);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>sp_mat<sp/>I2<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(<ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(Io,<sp/>Iy),<sp/>Im);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>sp_mat<sp/>I3<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(<ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(Iz,<sp/>In),<sp/>Im);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dimensions<sp/>=<sp/>3*m*n*o+m*n+m*o+n*o,<sp/>(m+2)*(n+2)*(o+2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m<sp/>!=<sp/>n)<sp/>||<sp/>(n<sp/>!=<sp/>o))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classUtils_1a02c4cbc4ed5860b69635b480c326cea4" kindref="member">Utils::spjoin_cols</ref>(<ref refid="classUtils_1a02c4cbc4ed5860b69635b480c326cea4" kindref="member">Utils::spjoin_cols</ref>(I1,<sp/>I2),<sp/>I3);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_mat<sp/>A1(3,<sp/>1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_mat<sp/>A2(3,<sp/>1);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_mat<sp/>A3(3,<sp/>1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>A1(0,<sp/>0)<sp/>=<sp/>A2(1,<sp/>0)<sp/>=<sp/>A3(2,<sp/>0)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(A1,<sp/>I1)<sp/>+<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(A2,<sp/>I2)<sp/>+<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(A3,<sp/>I3);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1-D<sp/>Constructor<sp/>for<sp/>second<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classInterpol_1acd04ad5e9add7dccfba468aa4cc821c0" refkind="member"><highlight class="normal"><ref refid="classInterpol_1a1a3cbc8871f096a37b1e859bdee5d788" kindref="member">Interpol::Interpol</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>type,<sp/>u32<sp/>m,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c)<sp/>:<sp/>sp_mat(m<sp/>+<sp/>2,<sp/>m<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>assert(m<sp/>&gt;=<sp/>4<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;m<sp/>&gt;=<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>assert(c<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>1<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>&lt;=<sp/>c<sp/>&lt;=<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>at(0,<sp/>0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>at(m<sp/>+<sp/>2<sp/>-<sp/>1,<sp/>m<sp/>+<sp/>1<sp/>-<sp/>1)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>vec<sp/>avg<sp/>=<sp/>{c,<sp/>1<sp/>-<sp/>c};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>m<sp/>+<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>at(i,<sp/>j)<sp/>=<sp/>avg(0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>at(i,<sp/>j<sp/>+<sp/>1)<sp/>=<sp/>avg(1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2-D<sp/>Constructor<sp/>for<sp/>second<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classInterpol_1a2efc6e31bcfbd0cac9b1a66b82823491" refkind="member"><highlight class="normal"><ref refid="classInterpol_1a1a3cbc8871f096a37b1e859bdee5d788" kindref="member">Interpol::Interpol</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>type,<sp/>u32<sp/>m,<sp/>u32<sp/>n,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c1,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Ix(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>m,<sp/>c1);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Iy(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>n,<sp/>c2);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Im(m<sp/>+<sp/>2,<sp/>m);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>Im.submat(1,<sp/>0,<sp/>m,<sp/>m<sp/>-<sp/>1)<sp/>=<sp/>speye(m,<sp/>m);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>sp_mat<sp/>In(n<sp/>+<sp/>2,<sp/>n);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>In.submat(1,<sp/>0,<sp/>n,<sp/>n<sp/>-<sp/>1)<sp/>=<sp/>speye(n,<sp/>n);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Sx<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(In,<sp/>Ix);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Sy<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(Iy,<sp/>Im);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classUtils_1a29075e84565397491dce88c1db2779f8" kindref="member">Utils::spjoin_rows</ref>(Sx,<sp/>Sy);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3-D<sp/>Constructor<sp/>for<sp/>second<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classInterpol_1a17290c4b037be2725c164516c309b823" refkind="member"><highlight class="normal"><ref refid="classInterpol_1a1a3cbc8871f096a37b1e859bdee5d788" kindref="member">Interpol::Interpol</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>type,<sp/>u32<sp/>m,<sp/>u32<sp/>n,<sp/>u32<sp/>o,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c1,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c2,<sp/><ref refid="utils_8h_1a4b04262b81aa7d31eb5d2f607e2a35de" kindref="member">Real</ref><sp/>c3)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Ix(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>m,<sp/>c1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Iy(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>n,<sp/>c2);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classInterpol" kindref="compound">Interpol</ref><sp/>Iz(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>o,<sp/>c3);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Im(m<sp/>+<sp/>2,<sp/>m);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>Im.submat(1,<sp/>0,<sp/>m,<sp/>m<sp/>-<sp/>1)<sp/>=<sp/>speye(m,<sp/>m);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>sp_mat<sp/>In(n<sp/>+<sp/>2,<sp/>n);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>In.submat(1,<sp/>0,<sp/>n,<sp/>n<sp/>-<sp/>1)<sp/>=<sp/>speye(n,<sp/>n);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Io(o<sp/>+<sp/>2,<sp/>o);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>Io.submat(1,<sp/>0,<sp/>o,<sp/>o<sp/>-<sp/>1)<sp/>=<sp/>speye(o,<sp/>o);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Sx<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(<ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(Io,<sp/>In),<sp/>Ix);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Sy<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(<ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(Io,<sp/>Iy),<sp/>Im);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>sp_mat<sp/>Sz<sp/>=<sp/><ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(<ref refid="classUtils_1a6f8a5b8b6441b0d15ce7c8326e486658" kindref="member">Utils::spkron</ref>(Iz,<sp/>In),<sp/>Im);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classUtils_1a29075e84565397491dce88c1db2779f8" kindref="member">Utils::spjoin_rows</ref>(<ref refid="classUtils_1a29075e84565397491dce88c1db2779f8" kindref="member">Utils::spjoin_rows</ref>(Sx,<sp/>Sy),<sp/>Sz);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/cpp/interpol.cpp"/>
  </compounddef>
</doxygen>
